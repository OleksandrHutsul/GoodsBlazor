@using GoodsBlazor.Shared.Dtos

<title>Products</title>

@if (Products is null || Products.Count == 0)
{
    <p>Products are missing</p>
}
else
{
    <div class="product-list">
        @foreach (var product in Products)
        {
            <div class="product-card" @onclick="() => ShowProductDetails(product)">
                <div class="product-image">
                    @if (!string.IsNullOrEmpty(product.ImageBase64))
                    {
                        <img src="data:image/png;base64,@product.ImageBase64" alt="@product.Name" />
                    }
                    else
                    {
                        <div class="no-image">None</div>
                    }
                </div>
                <div class="product-info">
                    <h4>@product.Name</h4>
                    <p>@(product.Description.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)</p>
                    <p class="product-price">@product.Price.ToString("C")</p>
                    <p class="product-type">Category: @product.ProductTypeName</p> 
                </div>
                <div class="product-actions">
                    @if (IsAdmin)
                    {
                        <button class="btn edit-btn" @onclick:stopPropagation="true" @onclick="() => OnEdit.InvokeAsync(product.Id)">Edit</button>
                        <button class="btn delete-btn" @onclick:stopPropagation="true" @onclick="() => DeleteProductAsync(product.Id)">Delete</button>
                    }
                    else
                    {
                        <button class="btn add-btn" @onclick:stopPropagation="true" @onclick="() => OnAddToCart.InvokeAsync(product.Id)">Add</button>
                    }
                </div>
            </div>
        }
    </div>
}

@if (SelectedProduct != null)
{
    <div class="modal-overlay" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            <span class="modal-close" @onclick="CloseModal">&times;</span>
            <h2 class="modal-text">@SelectedProduct.Name</h2>
            <div class="modal-image">
                @if (!string.IsNullOrEmpty(SelectedProduct.ImageBase64))
                {
                    <img src="data:image/png;base64,@SelectedProduct.ImageBase64" alt="@SelectedProduct.Name" />
                }
                else
                {
                    <div class="no-image">None</div>
                }
            </div>
            <p class="modal-text">@SelectedProduct.Description</p>
            <p class="modal-text product-price">@SelectedProduct.Price.ToString("C")</p>
            <p class="modal-text product-type">Category: @SelectedProduct.ProductTypeName</p>
            <div class="modal-actions">
                @if (IsAdmin)
                {
                    <button class="btn edit-btn" @onclick="() => OnEdit.InvokeAsync(SelectedProduct.Id)">Edit</button>
                    <button class="btn delete-btn" @onclick="() => DeleteProductAsync(SelectedProduct.Id)">Delete</button>
                }
                else
                {
                    <button class="btn add-btn" @onclick="() => OnAddToCart.InvokeAsync(SelectedProduct.Id)">Add</button>
                }
            </div>
        </div>
    </div>
}